/*
Returns the color alice blue.
*/
Color.aliceBlue = function()
{
  return Color.rgb(240, 248, 255);
};

/*
Returns the color antique white.
*/
Color.antiqueWhite = function()
{
  return Color.rgb(250, 235, 215);
};

/*
Returns the color aqua.
*/
Color.aqua = function()
{
  return Color.rgb(0, 255, 255);
};

/*
Returns the color aquamarine.
*/
Color.aquamarine = function()
{
  return Color.rgb(127, 255, 212);
};

/*
Returns the color azure.
*/
Color.azure = function()
{
  return Color.rgb(240, 255, 255);
};

/*
Returns the color beige.
*/
Color.beige = function()
{
  return Color.rgb(245, 245, 220);
};

/*
Returns the color bisque.
*/
Color.bisque = function()
{
  return Color.rgb(255, 228, 196);
};

/*
Returns the color black.
*/
Color.black = function()
{
  return Color.rgb(0, 0, 0);
};

/*
Returns the color blanched almond.
*/
Color.blanchedAlmond = function()
{
  return Color.rgb(255, 235, 205);
};

/*
Returns the color blue.
*/
Color.blue = function()
{
  return Color.rgb(0, 0, 255);
};

/*
Returns the color blue violet.
*/
Color.blueViolet = function()
{
  return Color.rgb(138, 43, 226);
};

/*
Returns the color brown.
*/
Color.brown = function()
{
  return Color.rgb(165, 42, 42);
};

/*
Returns the color burlywood.
*/
Color.burlywood = function()
{
  return Color.rgb(222, 184, 135);
};

/*
Returns the color cadet blue.
*/
Color.cadetBlue = function()
{
  return Color.rgb(95, 158, 160);
};

/*
Returns the color chartreuse.
*/
Color.chartreuse = function()
{
  return Color.rgb(127, 255, 0);
};

/*
Returns the color chocolate.
*/
Color.chocolate = function()
{
  return Color.rgb(210, 105, 30);
};

/*
Returns the color coral.
*/
Color.coral = function()
{
  return Color.rgb(255, 127, 80);
};

/*
Returns the color cornflower blue.
*/
Color.cornflowerBlue = function()
{
  return Color.rgb(100, 149, 237);
};

/*
Returns the color cornsilk.
*/
Color.cornsilk = function()
{
  return Color.rgb(255, 248, 220);
};

/*
Returns the color crimson.
*/
Color.crimson = function()
{
  return Color.rgb(220, 20, 60);
};

/*
Returns the color cyan.
*/
Color.cyan = function()
{
  return Color.rgb(0, 255, 255);
};

/*
Returns the color dark blue.
*/
Color.darkBlue = function()
{
  return Color.rgb(0, 0, 139);
};

/*
Returns the color dark cyan.
*/
Color.darkCyan = function()
{
  return Color.rgb(0, 139, 139);
};

/*
Returns the color dark goldenrod.
*/
Color.darkGoldenrod = function()
{
  return Color.rgb(184, 134, 11);
};

/*
Returns the color dark gray.
*/
Color.darkGray = function()
{
  return Color.rgb(169, 169, 169);
};

/*
Returns the color dark green.
*/
Color.darkGreen = function()
{
  return Color.rgb(0, 100, 0);
};

/*
Returns the color dark grey.
*/
Color.darkGrey = function()
{
  return Color.rgb(169, 169, 169);
};

/*
Returns the color dark khaki.
*/
Color.darkKhaki = function()
{
  return Color.rgb(189, 183, 107);
};

/*
Returns the color dark magenta.
*/
Color.darkMagenta = function()
{
  return Color.rgb(139, 0, 139);
};

/*
Returns the color dark olive green.
*/
Color.darkOliveGreen = function()
{
  return Color.rgb(85, 107, 47);
};

/*
Returns the color dark orange.
*/
Color.darkOrange = function()
{
  return Color.rgb(255, 140, 0);
};

/*
Returns the color dark orchid.
*/
Color.darkOrchid = function()
{
  return Color.rgb(153, 50, 204);
};

/*
Returns the color dark red.
*/
Color.darkRed = function()
{
  return Color.rgb(139, 0, 0);
};

/*
Returns the color dark salmon.
*/
Color.darkSalmon = function()
{
  return Color.rgb(233, 150, 122);
};

/*
Returns the color dark sea green.
*/
Color.darkSeaGreen = function()
{
  return Color.rgb(143, 188, 143);
};

/*
Returns the color dark slate blue.
*/
Color.darkSlateBlue = function()
{
  return Color.rgb(72, 61, 139);
};

/*
Returns the color dark slate gray.
*/
Color.darkSlateGray = function()
{
  return Color.rgb(47, 79, 79);
};

/*
Returns the color dark slate grey.
*/
Color.darkSlateGrey = function()
{
  return Color.rgb(47, 79, 79);
};

/*
Returns the color dark turquoise.
*/
Color.darkTurquoise = function()
{
  return Color.rgb(0, 206, 209);
};

/*
Returns the color dark violet.
*/
Color.darkViolet = function()
{
  return Color.rgb(148, 0, 211);
};

/*
Returns the color deep pink.
*/
Color.deepPink = function()
{
  return Color.rgb(255, 20, 147);
};

/*
Returns the color deep sky blue.
*/
Color.deepSkyBlue = function()
{
  return Color.rgb(0, 191, 255);
};

/*
Returns the color dim gray.
*/
Color.dimGray = function()
{
  return Color.rgb(105, 105, 105);
};

/*
Returns the color dim grey.
*/
Color.dimGrey = function()
{
  return Color.rgb(105, 105, 105);
};

/*
Returns the color dodger blue.
*/
Color.dodgerBlue = function()
{
  return Color.rgb(30, 144, 255);
};

/*
Returns the color firebrick.
*/
Color.firebrick = function()
{
  return Color.rgb(178, 34, 34);
};

/*
Returns the color floral white.
*/
Color.floralWhite = function()
{
  return Color.rgb(255, 250, 240);
};

/*
Returns the color forest green.
*/
Color.forestGreen = function()
{
  return Color.rgb(34, 139, 34);
};

/*
Returns the color fuchsia.
*/
Color.fuchsia = function()
{
  return Color.rgb(255, 0, 255);
};

/*
Returns the color gainsboro.
*/
Color.gainsboro = function()
{
  return Color.rgb(220, 220, 220);
};

/*
Returns the color ghost white.
*/
Color.ghostWhite = function()
{
  return Color.rgb(248, 248, 255);
};

/*
Returns the color gold.
*/
Color.gold = function()
{
  return Color.rgb(255, 215, 0);
};

/*
Returns the color goldenrod.
*/
Color.goldenrod = function()
{
  return Color.rgb(218, 165, 32);
};

/*
Returns the color gray.
*/
Color.gray = function()
{
  return Color.rgb(128, 128, 128);
};

/*
Returns the color green.
*/
Color.green = function()
{
  return Color.rgb(0, 128, 0);
};

/*
Returns the color green yellow.
*/
Color.greenYellow = function()
{
  return Color.rgb(173, 255, 47);
};

/*
Returns the color grey.
*/
Color.grey = function()
{
  return Color.rgb(128, 128, 128);
};

/*
Returns the color honeydew.
*/
Color.honeydew = function()
{
  return Color.rgb(240, 255, 240);
};

/*
Returns the color hot pink.
*/
Color.hotPink = function()
{
  return Color.rgb(255, 105, 180);
};

/*
Returns the color indian red.
*/
Color.indianRed = function()
{
  return Color.rgb(205, 92, 92);
};

/*
Returns the color indigo.
*/
Color.indigo = function()
{
  return Color.rgb(75, 0, 130);
};

/*
Returns the color ivory.
*/
Color.ivory = function()
{
  return Color.rgb(255, 255, 240);
};

/*
Returns the color khaki.
*/
Color.khaki = function()
{
  return Color.rgb(240, 230, 140);
};

/*
Returns the color lavender.
*/
Color.lavender = function()
{
  return Color.rgb(230, 230, 250);
};

/*
Returns the color lavender blush.
*/
Color.lavenderBlush = function()
{
  return Color.rgb(255, 240, 245);
};

/*
Returns the color lawn green.
*/
Color.lawnGreen = function()
{
  return Color.rgb(124, 252, 0);
};

/*
Returns the color lemon chiffon.
*/
Color.lemonChiffon = function()
{
  return Color.rgb(255, 250, 205);
};

/*
Returns the color light blue.
*/
Color.lightBlue = function()
{
  return Color.rgb(173, 216, 230);
};

/*
Returns the color light coral.
*/
Color.lightCoral = function()
{
  return Color.rgb(240, 128, 128);
};

/*
Returns the color light cyan.
*/
Color.lightCyan = function()
{
  return Color.rgb(224, 255, 255);
};

/*
Returns the color light goldenrod yellow.
*/
Color.lightGoldenrodYellow = function()
{
  return Color.rgb(250, 250, 210);
};

/*
Returns the color light gray.
*/
Color.lightGray = function()
{
  return Color.rgb(211, 211, 211);
};

/*
Returns the color light green.
*/
Color.lightGreen = function()
{
  return Color.rgb(144, 238, 144);
};

/*
Returns the color light grey.
*/
Color.lightGrey = function()
{
  return Color.rgb(211, 211, 211);
};

/*
Returns the color light pink.
*/
Color.lightPink = function()
{
  return Color.rgb(255, 182, 193);
};

/*
Returns the color light salmon.
*/
Color.lightSalmon = function()
{
  return Color.rgb(255, 160, 122);
};

/*
Returns the color light sea green.
*/
Color.lightSeaGreen = function()
{
  return Color.rgb(32, 178, 170);
};

/*
Returns the color light sky blue.
*/
Color.lightSkyBlue = function()
{
  return Color.rgb(135, 206, 250);
};

/*
Returns the color light slate gray.
*/
Color.lightSlateGray = function()
{
  return Color.rgb(119, 136, 153);
};

/*
Returns the color light slate grey.
*/
Color.lightSlateGrey = function()
{
  return Color.rgb(119, 136, 153);
};

/*
Returns the color light steel blue.
*/
Color.lightSteelBlue = function()
{
  return Color.rgb(176, 196, 222);
};

/*
Returns the color light yellow.
*/
Color.lightYellow = function()
{
  return Color.rgb(255, 255, 224);
};

/*
Returns the color lime.
*/
Color.lime = function()
{
  return Color.rgb(0, 255, 0);
};

/*
Returns the color lime green.
*/
Color.limeGreen = function()
{
  return Color.rgb(50, 205, 50);
};

/*
Returns the color linen.
*/
Color.linen = function()
{
  return Color.rgb(250, 240, 230);
};

/*
Returns the color magenta.
*/
Color.magenta = function()
{
  return Color.rgb(255, 0, 255);
};

/*
Returns the color maroon.
*/
Color.maroon = function()
{
  return Color.rgb(128, 0, 0);
};

/*
Returns the color medium aquamarine.
*/
Color.mediumAquamarine = function()
{
  return Color.rgb(102, 205, 170);
};

/*
Returns the color medium blue.
*/
Color.mediumBlue = function()
{
  return Color.rgb(0, 0, 205);
};

/*
Returns the color medium orchid.
*/
Color.mediumOrchid = function()
{
  return Color.rgb(186, 85, 211);
};

/*
Returns the color medium purple.
*/
Color.mediumPurple = function()
{
  return Color.rgb(147, 112, 219);
};

/*
Returns the color medium sea green.
*/
Color.mediumSeaGreen = function()
{
  return Color.rgb(60, 179, 113);
};

/*
Returns the color medium slate blue.
*/
Color.mediumSlateBlue = function()
{
  return Color.rgb(123, 104, 238);
};

/*
Returns the color medium spring green.
*/
Color.mediumSpringGreen = function()
{
  return Color.rgb(0, 250, 154);
};

/*
Returns the color medium turquoise.
*/
Color.mediumTurquoise = function()
{
  return Color.rgb(72, 209, 204);
};

/*
Returns the color medium violet red.
*/
Color.mediumVioletRed = function()
{
  return Color.rgb(199, 21, 133);
};

/*
Returns the color midnight blue.
*/
Color.midnightBlue = function()
{
  return Color.rgb(25, 25, 112);
};

/*
Returns the color mint cream.
*/
Color.mintCream = function()
{
  return Color.rgb(245, 255, 250);
};

/*
Returns the color misty rose.
*/
Color.mistyRose = function()
{
  return Color.rgb(255, 228, 225);
};

/*
Returns the color moccasin.
*/
Color.moccasin = function()
{
  return Color.rgb(255, 228, 181);
};

/*
Returns the color navajo white.
*/
Color.navajoWhite = function()
{
  return Color.rgb(255, 222, 173);
};

/*
Returns the color navy.
*/
Color.navy = function()
{
  return Color.rgb(0, 0, 128);
};

/*
Returns the color old lace.
*/
Color.oldLace = function()
{
  return Color.rgb(253, 245, 230);
};

/*
Returns the color olive.
*/
Color.olive = function()
{
  return Color.rgb(128, 128, 0);
};

/*
Returns the color olive drab.
*/
Color.oliveDrab = function()
{
  return Color.rgb(107, 142, 35);
};

/*
Returns the color orange.
*/
Color.orange = function()
{
  return Color.rgb(255, 165, 0);
};

/*
Returns the color orange red.
*/
Color.orangeRed = function()
{
  return Color.rgb(255, 69, 0);
};

/*
Returns the color orchid.
*/
Color.orchid = function()
{
  return Color.rgb(218, 112, 214);
};

/*
Returns the color pale goldenrod.
*/
Color.paleGoldenrod = function()
{
  return Color.rgb(238, 232, 170);
};

/*
Returns the color pale green.
*/
Color.paleGreen = function()
{
  return Color.rgb(152, 251, 152);
};

/*
Returns the color pale turquoise.
*/
Color.paleTurquoise = function()
{
  return Color.rgb(175, 238, 238);
};

/*
Returns the color pale violet red.
*/
Color.paleVioletRed = function()
{
  return Color.rgb(219, 112, 147);
};

/*
Returns the color papaya whip.
*/
Color.papayaWhip = function()
{
  return Color.rgb(255, 239, 213);
};

/*
Returns the color peach puff.
*/
Color.peachPuff = function()
{
  return Color.rgb(255, 218, 185);
};

/*
Returns the color peru.
*/
Color.peru = function()
{
  return Color.rgb(205, 133, 63);
};

/*
Returns the color pink.
*/
Color.pink = function()
{
  return Color.rgb(255, 192, 203);
};

/*
Returns the color plum.
*/
Color.plum = function()
{
  return Color.rgb(221, 160, 221);
};

/*
Returns the color powder blue.
*/
Color.powderBlue = function()
{
  return Color.rgb(176, 224, 230);
};

/*
Returns the color purple.
*/
Color.purple = function()
{
  return Color.rgb(128, 0, 128);
};

/*
Returns the color red.
*/
Color.red = function()
{
  return Color.rgb(255, 0, 0);
};

/*
Returns the color rosy brown.
*/
Color.rosyBrown = function()
{
  return Color.rgb(188, 143, 143);
};

/*
Returns the color royal blue.
*/
Color.royalBlue = function()
{
  return Color.rgb(65, 105, 225);
};

/*
Returns the color saddle brown.
*/
Color.saddleBrown = function()
{
  return Color.rgb(139, 69, 19);
};

/*
Returns the color salmon.
*/
Color.salmon = function()
{
  return Color.rgb(250, 128, 114);
};

/*
Returns the color sandy brown.
*/
Color.sandyBrown = function()
{
  return Color.rgb(244, 164, 96);
};

/*
Returns the color sea green.
*/
Color.seaGreen = function()
{
  return Color.rgb(46, 139, 87);
};

/*
Returns the color seashell.
*/
Color.seashell = function()
{
  return Color.rgb(255, 245, 238);
};

/*
Returns the color sienna.
*/
Color.sienna = function()
{
  return Color.rgb(160, 82, 45);
};

/*
Returns the color silver.
*/
Color.silver = function()
{
  return Color.rgb(192, 192, 192);
};

/*
Returns the color sky blue.
*/
Color.skyBlue = function()
{
  return Color.rgb(135, 206, 235);
};

/*
Returns the color slate blue.
*/
Color.slateBlue = function()
{
  return Color.rgb(106, 90, 205);
};

/*
Returns the color slate gray.
*/
Color.slateGray = function()
{
  return Color.rgb(112, 128, 144);
};

/*
Returns the color slate grey.
*/
Color.slateGrey = function()
{
  return Color.rgb(112, 128, 144);
};

/*
Returns the color snow.
*/
Color.snow = function()
{
  return Color.rgb(255, 250, 250);
};

/*
Returns the color spring green.
*/
Color.springGreen = function()
{
  return Color.rgb(0, 255, 127);
};

/*
Returns the color steel blue.
*/
Color.steelBlue = function()
{
  return Color.rgb(70, 130, 180);
};

/*
Returns the color tan.
*/
Color.tan = function()
{
  return Color.rgb(210, 180, 140);
};

/*
Returns the color teal.
*/
Color.teal = function()
{
  return Color.rgb(0, 128, 128);
};

/*
Returns the color thistle.
*/
Color.thistle = function()
{
  return Color.rgb(216, 191, 216);
};

/*
Returns the color tomato.
*/
Color.tomato = function()
{
  return Color.rgb(255, 99, 71);
};

/*
Returns the color turquoise.
*/
Color.turquoise = function()
{
  return Color.rgb(64, 224, 208);
};

/*
Returns the color violet.
*/
Color.violet = function()
{
  return Color.rgb(238, 130, 238);
};

/*
Returns the color wheat.
*/
Color.wheat = function()
{
  return Color.rgb(245, 222, 179);
};

/*
Returns the color white.
*/
Color.white = function()
{
  return Color.rgb(255, 255, 255);
};

/*
Returns the color white smoke.
*/
Color.whiteSmoke = function()
{
  return Color.rgb(245, 245, 245);
};

/*
Returns the color yellow.
*/
Color.yellow = function()
{
  return Color.rgb(255, 255, 0);
};

/*
Returns the color yellow green.
*/
Color.yellowGreen = function()
{
  return Color.rgb(154, 205, 50);
};

  describe("Color.aliceBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.aliceBlue().red()).toEqual(240);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.aliceBlue().green()).toEqual(248);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.aliceBlue().blue()).toEqual(255);
    });
  });

  describe("Color.antiqueWhite() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.antiqueWhite().red()).toEqual(250);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.antiqueWhite().green()).toEqual(235);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.antiqueWhite().blue()).toEqual(215);
    });
  });

  describe("Color.aqua() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.aqua().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.aqua().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.aqua().blue()).toEqual(255);
    });
  });

  describe("Color.aquamarine() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.aquamarine().red()).toEqual(127);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.aquamarine().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.aquamarine().blue()).toEqual(212);
    });
  });

  describe("Color.azure() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.azure().red()).toEqual(240);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.azure().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.azure().blue()).toEqual(255);
    });
  });

  describe("Color.beige() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.beige().red()).toEqual(245);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.beige().green()).toEqual(245);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.beige().blue()).toEqual(220);
    });
  });

  describe("Color.bisque() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.bisque().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.bisque().green()).toEqual(228);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.bisque().blue()).toEqual(196);
    });
  });

  describe("Color.black() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.black().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.black().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.black().blue()).toEqual(0);
    });
  });

  describe("Color.blanchedAlmond() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.blanchedAlmond().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.blanchedAlmond().green()).toEqual(235);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.blanchedAlmond().blue()).toEqual(205);
    });
  });

  describe("Color.blue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.blue().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.blue().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.blue().blue()).toEqual(255);
    });
  });

  describe("Color.blueViolet() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.blueViolet().red()).toEqual(138);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.blueViolet().green()).toEqual(43);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.blueViolet().blue()).toEqual(226);
    });
  });

  describe("Color.brown() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.brown().red()).toEqual(165);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.brown().green()).toEqual(42);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.brown().blue()).toEqual(42);
    });
  });

  describe("Color.burlywood() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.burlywood().red()).toEqual(222);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.burlywood().green()).toEqual(184);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.burlywood().blue()).toEqual(135);
    });
  });

  describe("Color.cadetBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.cadetBlue().red()).toEqual(95);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.cadetBlue().green()).toEqual(158);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.cadetBlue().blue()).toEqual(160);
    });
  });

  describe("Color.chartreuse() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.chartreuse().red()).toEqual(127);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.chartreuse().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.chartreuse().blue()).toEqual(0);
    });
  });

  describe("Color.chocolate() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.chocolate().red()).toEqual(210);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.chocolate().green()).toEqual(105);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.chocolate().blue()).toEqual(30);
    });
  });

  describe("Color.coral() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.coral().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.coral().green()).toEqual(127);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.coral().blue()).toEqual(80);
    });
  });

  describe("Color.cornflowerBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.cornflowerBlue().red()).toEqual(100);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.cornflowerBlue().green()).toEqual(149);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.cornflowerBlue().blue()).toEqual(237);
    });
  });

  describe("Color.cornsilk() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.cornsilk().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.cornsilk().green()).toEqual(248);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.cornsilk().blue()).toEqual(220);
    });
  });

  describe("Color.crimson() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.crimson().red()).toEqual(220);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.crimson().green()).toEqual(20);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.crimson().blue()).toEqual(60);
    });
  });

  describe("Color.cyan() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.cyan().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.cyan().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.cyan().blue()).toEqual(255);
    });
  });

  describe("Color.darkBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkBlue().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkBlue().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkBlue().blue()).toEqual(139);
    });
  });

  describe("Color.darkCyan() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkCyan().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkCyan().green()).toEqual(139);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkCyan().blue()).toEqual(139);
    });
  });

  describe("Color.darkGoldenrod() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkGoldenrod().red()).toEqual(184);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkGoldenrod().green()).toEqual(134);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkGoldenrod().blue()).toEqual(11);
    });
  });

  describe("Color.darkGray() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkGray().red()).toEqual(169);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkGray().green()).toEqual(169);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkGray().blue()).toEqual(169);
    });
  });

  describe("Color.darkGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkGreen().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkGreen().green()).toEqual(100);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkGreen().blue()).toEqual(0);
    });
  });

  describe("Color.darkGrey() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkGrey().red()).toEqual(169);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkGrey().green()).toEqual(169);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkGrey().blue()).toEqual(169);
    });
  });

  describe("Color.darkKhaki() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkKhaki().red()).toEqual(189);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkKhaki().green()).toEqual(183);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkKhaki().blue()).toEqual(107);
    });
  });

  describe("Color.darkMagenta() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkMagenta().red()).toEqual(139);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkMagenta().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkMagenta().blue()).toEqual(139);
    });
  });

  describe("Color.darkOliveGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkOliveGreen().red()).toEqual(85);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkOliveGreen().green()).toEqual(107);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkOliveGreen().blue()).toEqual(47);
    });
  });

  describe("Color.darkOrange() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkOrange().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkOrange().green()).toEqual(140);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkOrange().blue()).toEqual(0);
    });
  });

  describe("Color.darkOrchid() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkOrchid().red()).toEqual(153);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkOrchid().green()).toEqual(50);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkOrchid().blue()).toEqual(204);
    });
  });

  describe("Color.darkRed() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkRed().red()).toEqual(139);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkRed().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkRed().blue()).toEqual(0);
    });
  });

  describe("Color.darkSalmon() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkSalmon().red()).toEqual(233);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkSalmon().green()).toEqual(150);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkSalmon().blue()).toEqual(122);
    });
  });

  describe("Color.darkSeaGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkSeaGreen().red()).toEqual(143);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkSeaGreen().green()).toEqual(188);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkSeaGreen().blue()).toEqual(143);
    });
  });

  describe("Color.darkSlateBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkSlateBlue().red()).toEqual(72);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkSlateBlue().green()).toEqual(61);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkSlateBlue().blue()).toEqual(139);
    });
  });

  describe("Color.darkSlateGray() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkSlateGray().red()).toEqual(47);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkSlateGray().green()).toEqual(79);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkSlateGray().blue()).toEqual(79);
    });
  });

  describe("Color.darkSlateGrey() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkSlateGrey().red()).toEqual(47);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkSlateGrey().green()).toEqual(79);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkSlateGrey().blue()).toEqual(79);
    });
  });

  describe("Color.darkTurquoise() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkTurquoise().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkTurquoise().green()).toEqual(206);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkTurquoise().blue()).toEqual(209);
    });
  });

  describe("Color.darkViolet() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.darkViolet().red()).toEqual(148);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.darkViolet().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.darkViolet().blue()).toEqual(211);
    });
  });

  describe("Color.deepPink() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.deepPink().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.deepPink().green()).toEqual(20);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.deepPink().blue()).toEqual(147);
    });
  });

  describe("Color.deepSkyBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.deepSkyBlue().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.deepSkyBlue().green()).toEqual(191);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.deepSkyBlue().blue()).toEqual(255);
    });
  });

  describe("Color.dimGray() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.dimGray().red()).toEqual(105);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.dimGray().green()).toEqual(105);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.dimGray().blue()).toEqual(105);
    });
  });

  describe("Color.dimGrey() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.dimGrey().red()).toEqual(105);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.dimGrey().green()).toEqual(105);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.dimGrey().blue()).toEqual(105);
    });
  });

  describe("Color.dodgerBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.dodgerBlue().red()).toEqual(30);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.dodgerBlue().green()).toEqual(144);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.dodgerBlue().blue()).toEqual(255);
    });
  });

  describe("Color.firebrick() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.firebrick().red()).toEqual(178);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.firebrick().green()).toEqual(34);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.firebrick().blue()).toEqual(34);
    });
  });

  describe("Color.floralWhite() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.floralWhite().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.floralWhite().green()).toEqual(250);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.floralWhite().blue()).toEqual(240);
    });
  });

  describe("Color.forestGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.forestGreen().red()).toEqual(34);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.forestGreen().green()).toEqual(139);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.forestGreen().blue()).toEqual(34);
    });
  });

  describe("Color.fuchsia() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.fuchsia().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.fuchsia().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.fuchsia().blue()).toEqual(255);
    });
  });

  describe("Color.gainsboro() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.gainsboro().red()).toEqual(220);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.gainsboro().green()).toEqual(220);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.gainsboro().blue()).toEqual(220);
    });
  });

  describe("Color.ghostWhite() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.ghostWhite().red()).toEqual(248);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.ghostWhite().green()).toEqual(248);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.ghostWhite().blue()).toEqual(255);
    });
  });

  describe("Color.gold() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.gold().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.gold().green()).toEqual(215);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.gold().blue()).toEqual(0);
    });
  });

  describe("Color.goldenrod() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.goldenrod().red()).toEqual(218);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.goldenrod().green()).toEqual(165);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.goldenrod().blue()).toEqual(32);
    });
  });

  describe("Color.gray() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.gray().red()).toEqual(128);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.gray().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.gray().blue()).toEqual(128);
    });
  });

  describe("Color.green() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.green().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.green().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.green().blue()).toEqual(0);
    });
  });

  describe("Color.greenYellow() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.greenYellow().red()).toEqual(173);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.greenYellow().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.greenYellow().blue()).toEqual(47);
    });
  });

  describe("Color.grey() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.grey().red()).toEqual(128);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.grey().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.grey().blue()).toEqual(128);
    });
  });

  describe("Color.honeydew() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.honeydew().red()).toEqual(240);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.honeydew().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.honeydew().blue()).toEqual(240);
    });
  });

  describe("Color.hotPink() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.hotPink().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.hotPink().green()).toEqual(105);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.hotPink().blue()).toEqual(180);
    });
  });

  describe("Color.indianRed() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.indianRed().red()).toEqual(205);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.indianRed().green()).toEqual(92);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.indianRed().blue()).toEqual(92);
    });
  });

  describe("Color.indigo() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.indigo().red()).toEqual(75);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.indigo().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.indigo().blue()).toEqual(130);
    });
  });

  describe("Color.ivory() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.ivory().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.ivory().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.ivory().blue()).toEqual(240);
    });
  });

  describe("Color.khaki() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.khaki().red()).toEqual(240);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.khaki().green()).toEqual(230);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.khaki().blue()).toEqual(140);
    });
  });

  describe("Color.lavender() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lavender().red()).toEqual(230);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lavender().green()).toEqual(230);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lavender().blue()).toEqual(250);
    });
  });

  describe("Color.lavenderBlush() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lavenderBlush().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lavenderBlush().green()).toEqual(240);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lavenderBlush().blue()).toEqual(245);
    });
  });

  describe("Color.lawnGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lawnGreen().red()).toEqual(124);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lawnGreen().green()).toEqual(252);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lawnGreen().blue()).toEqual(0);
    });
  });

  describe("Color.lemonChiffon() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lemonChiffon().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lemonChiffon().green()).toEqual(250);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lemonChiffon().blue()).toEqual(205);
    });
  });

  describe("Color.lightBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightBlue().red()).toEqual(173);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightBlue().green()).toEqual(216);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightBlue().blue()).toEqual(230);
    });
  });

  describe("Color.lightCoral() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightCoral().red()).toEqual(240);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightCoral().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightCoral().blue()).toEqual(128);
    });
  });

  describe("Color.lightCyan() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightCyan().red()).toEqual(224);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightCyan().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightCyan().blue()).toEqual(255);
    });
  });

  describe("Color.lightGoldenrodYellow() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightGoldenrodYellow().red()).toEqual(250);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightGoldenrodYellow().green()).toEqual(250);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightGoldenrodYellow().blue()).toEqual(210);
    });
  });

  describe("Color.lightGray() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightGray().red()).toEqual(211);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightGray().green()).toEqual(211);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightGray().blue()).toEqual(211);
    });
  });

  describe("Color.lightGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightGreen().red()).toEqual(144);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightGreen().green()).toEqual(238);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightGreen().blue()).toEqual(144);
    });
  });

  describe("Color.lightGrey() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightGrey().red()).toEqual(211);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightGrey().green()).toEqual(211);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightGrey().blue()).toEqual(211);
    });
  });

  describe("Color.lightPink() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightPink().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightPink().green()).toEqual(182);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightPink().blue()).toEqual(193);
    });
  });

  describe("Color.lightSalmon() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightSalmon().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightSalmon().green()).toEqual(160);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightSalmon().blue()).toEqual(122);
    });
  });

  describe("Color.lightSeaGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightSeaGreen().red()).toEqual(32);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightSeaGreen().green()).toEqual(178);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightSeaGreen().blue()).toEqual(170);
    });
  });

  describe("Color.lightSkyBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightSkyBlue().red()).toEqual(135);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightSkyBlue().green()).toEqual(206);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightSkyBlue().blue()).toEqual(250);
    });
  });

  describe("Color.lightSlateGray() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightSlateGray().red()).toEqual(119);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightSlateGray().green()).toEqual(136);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightSlateGray().blue()).toEqual(153);
    });
  });

  describe("Color.lightSlateGrey() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightSlateGrey().red()).toEqual(119);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightSlateGrey().green()).toEqual(136);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightSlateGrey().blue()).toEqual(153);
    });
  });

  describe("Color.lightSteelBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightSteelBlue().red()).toEqual(176);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightSteelBlue().green()).toEqual(196);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightSteelBlue().blue()).toEqual(222);
    });
  });

  describe("Color.lightYellow() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lightYellow().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lightYellow().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lightYellow().blue()).toEqual(224);
    });
  });

  describe("Color.lime() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.lime().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.lime().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.lime().blue()).toEqual(0);
    });
  });

  describe("Color.limeGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.limeGreen().red()).toEqual(50);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.limeGreen().green()).toEqual(205);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.limeGreen().blue()).toEqual(50);
    });
  });

  describe("Color.linen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.linen().red()).toEqual(250);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.linen().green()).toEqual(240);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.linen().blue()).toEqual(230);
    });
  });

  describe("Color.magenta() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.magenta().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.magenta().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.magenta().blue()).toEqual(255);
    });
  });

  describe("Color.maroon() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.maroon().red()).toEqual(128);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.maroon().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.maroon().blue()).toEqual(0);
    });
  });

  describe("Color.mediumAquamarine() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumAquamarine().red()).toEqual(102);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumAquamarine().green()).toEqual(205);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumAquamarine().blue()).toEqual(170);
    });
  });

  describe("Color.mediumBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumBlue().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumBlue().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumBlue().blue()).toEqual(205);
    });
  });

  describe("Color.mediumOrchid() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumOrchid().red()).toEqual(186);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumOrchid().green()).toEqual(85);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumOrchid().blue()).toEqual(211);
    });
  });

  describe("Color.mediumPurple() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumPurple().red()).toEqual(147);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumPurple().green()).toEqual(112);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumPurple().blue()).toEqual(219);
    });
  });

  describe("Color.mediumSeaGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumSeaGreen().red()).toEqual(60);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumSeaGreen().green()).toEqual(179);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumSeaGreen().blue()).toEqual(113);
    });
  });

  describe("Color.mediumSlateBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumSlateBlue().red()).toEqual(123);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumSlateBlue().green()).toEqual(104);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumSlateBlue().blue()).toEqual(238);
    });
  });

  describe("Color.mediumSpringGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumSpringGreen().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumSpringGreen().green()).toEqual(250);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumSpringGreen().blue()).toEqual(154);
    });
  });

  describe("Color.mediumTurquoise() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumTurquoise().red()).toEqual(72);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumTurquoise().green()).toEqual(209);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumTurquoise().blue()).toEqual(204);
    });
  });

  describe("Color.mediumVioletRed() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mediumVioletRed().red()).toEqual(199);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mediumVioletRed().green()).toEqual(21);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mediumVioletRed().blue()).toEqual(133);
    });
  });

  describe("Color.midnightBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.midnightBlue().red()).toEqual(25);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.midnightBlue().green()).toEqual(25);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.midnightBlue().blue()).toEqual(112);
    });
  });

  describe("Color.mintCream() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mintCream().red()).toEqual(245);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mintCream().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mintCream().blue()).toEqual(250);
    });
  });

  describe("Color.mistyRose() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.mistyRose().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.mistyRose().green()).toEqual(228);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.mistyRose().blue()).toEqual(225);
    });
  });

  describe("Color.moccasin() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.moccasin().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.moccasin().green()).toEqual(228);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.moccasin().blue()).toEqual(181);
    });
  });

  describe("Color.navajoWhite() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.navajoWhite().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.navajoWhite().green()).toEqual(222);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.navajoWhite().blue()).toEqual(173);
    });
  });

  describe("Color.navy() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.navy().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.navy().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.navy().blue()).toEqual(128);
    });
  });

  describe("Color.oldLace() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.oldLace().red()).toEqual(253);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.oldLace().green()).toEqual(245);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.oldLace().blue()).toEqual(230);
    });
  });

  describe("Color.olive() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.olive().red()).toEqual(128);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.olive().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.olive().blue()).toEqual(0);
    });
  });

  describe("Color.oliveDrab() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.oliveDrab().red()).toEqual(107);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.oliveDrab().green()).toEqual(142);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.oliveDrab().blue()).toEqual(35);
    });
  });

  describe("Color.orange() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.orange().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.orange().green()).toEqual(165);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.orange().blue()).toEqual(0);
    });
  });

  describe("Color.orangeRed() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.orangeRed().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.orangeRed().green()).toEqual(69);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.orangeRed().blue()).toEqual(0);
    });
  });

  describe("Color.orchid() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.orchid().red()).toEqual(218);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.orchid().green()).toEqual(112);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.orchid().blue()).toEqual(214);
    });
  });

  describe("Color.paleGoldenrod() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.paleGoldenrod().red()).toEqual(238);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.paleGoldenrod().green()).toEqual(232);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.paleGoldenrod().blue()).toEqual(170);
    });
  });

  describe("Color.paleGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.paleGreen().red()).toEqual(152);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.paleGreen().green()).toEqual(251);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.paleGreen().blue()).toEqual(152);
    });
  });

  describe("Color.paleTurquoise() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.paleTurquoise().red()).toEqual(175);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.paleTurquoise().green()).toEqual(238);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.paleTurquoise().blue()).toEqual(238);
    });
  });

  describe("Color.paleVioletRed() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.paleVioletRed().red()).toEqual(219);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.paleVioletRed().green()).toEqual(112);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.paleVioletRed().blue()).toEqual(147);
    });
  });

  describe("Color.papayaWhip() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.papayaWhip().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.papayaWhip().green()).toEqual(239);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.papayaWhip().blue()).toEqual(213);
    });
  });

  describe("Color.peachPuff() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.peachPuff().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.peachPuff().green()).toEqual(218);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.peachPuff().blue()).toEqual(185);
    });
  });

  describe("Color.peru() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.peru().red()).toEqual(205);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.peru().green()).toEqual(133);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.peru().blue()).toEqual(63);
    });
  });

  describe("Color.pink() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.pink().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.pink().green()).toEqual(192);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.pink().blue()).toEqual(203);
    });
  });

  describe("Color.plum() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.plum().red()).toEqual(221);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.plum().green()).toEqual(160);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.plum().blue()).toEqual(221);
    });
  });

  describe("Color.powderBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.powderBlue().red()).toEqual(176);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.powderBlue().green()).toEqual(224);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.powderBlue().blue()).toEqual(230);
    });
  });

  describe("Color.purple() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.purple().red()).toEqual(128);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.purple().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.purple().blue()).toEqual(128);
    });
  });

  describe("Color.red() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.red().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.red().green()).toEqual(0);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.red().blue()).toEqual(0);
    });
  });

  describe("Color.rosyBrown() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.rosyBrown().red()).toEqual(188);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.rosyBrown().green()).toEqual(143);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.rosyBrown().blue()).toEqual(143);
    });
  });

  describe("Color.royalBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.royalBlue().red()).toEqual(65);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.royalBlue().green()).toEqual(105);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.royalBlue().blue()).toEqual(225);
    });
  });

  describe("Color.saddleBrown() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.saddleBrown().red()).toEqual(139);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.saddleBrown().green()).toEqual(69);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.saddleBrown().blue()).toEqual(19);
    });
  });

  describe("Color.salmon() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.salmon().red()).toEqual(250);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.salmon().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.salmon().blue()).toEqual(114);
    });
  });

  describe("Color.sandyBrown() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.sandyBrown().red()).toEqual(244);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.sandyBrown().green()).toEqual(164);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.sandyBrown().blue()).toEqual(96);
    });
  });

  describe("Color.seaGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.seaGreen().red()).toEqual(46);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.seaGreen().green()).toEqual(139);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.seaGreen().blue()).toEqual(87);
    });
  });

  describe("Color.seashell() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.seashell().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.seashell().green()).toEqual(245);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.seashell().blue()).toEqual(238);
    });
  });

  describe("Color.sienna() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.sienna().red()).toEqual(160);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.sienna().green()).toEqual(82);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.sienna().blue()).toEqual(45);
    });
  });

  describe("Color.silver() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.silver().red()).toEqual(192);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.silver().green()).toEqual(192);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.silver().blue()).toEqual(192);
    });
  });

  describe("Color.skyBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.skyBlue().red()).toEqual(135);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.skyBlue().green()).toEqual(206);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.skyBlue().blue()).toEqual(235);
    });
  });

  describe("Color.slateBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.slateBlue().red()).toEqual(106);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.slateBlue().green()).toEqual(90);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.slateBlue().blue()).toEqual(205);
    });
  });

  describe("Color.slateGray() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.slateGray().red()).toEqual(112);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.slateGray().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.slateGray().blue()).toEqual(144);
    });
  });

  describe("Color.slateGrey() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.slateGrey().red()).toEqual(112);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.slateGrey().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.slateGrey().blue()).toEqual(144);
    });
  });

  describe("Color.snow() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.snow().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.snow().green()).toEqual(250);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.snow().blue()).toEqual(250);
    });
  });

  describe("Color.springGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.springGreen().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.springGreen().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.springGreen().blue()).toEqual(127);
    });
  });

  describe("Color.steelBlue() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.steelBlue().red()).toEqual(70);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.steelBlue().green()).toEqual(130);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.steelBlue().blue()).toEqual(180);
    });
  });

  describe("Color.tan() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.tan().red()).toEqual(210);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.tan().green()).toEqual(180);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.tan().blue()).toEqual(140);
    });
  });

  describe("Color.teal() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.teal().red()).toEqual(0);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.teal().green()).toEqual(128);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.teal().blue()).toEqual(128);
    });
  });

  describe("Color.thistle() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.thistle().red()).toEqual(216);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.thistle().green()).toEqual(191);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.thistle().blue()).toEqual(216);
    });
  });

  describe("Color.tomato() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.tomato().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.tomato().green()).toEqual(99);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.tomato().blue()).toEqual(71);
    });
  });

  describe("Color.turquoise() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.turquoise().red()).toEqual(64);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.turquoise().green()).toEqual(224);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.turquoise().blue()).toEqual(208);
    });
  });

  describe("Color.violet() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.violet().red()).toEqual(238);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.violet().green()).toEqual(130);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.violet().blue()).toEqual(238);
    });
  });

  describe("Color.wheat() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.wheat().red()).toEqual(245);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.wheat().green()).toEqual(222);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.wheat().blue()).toEqual(179);
    });
  });

  describe("Color.white() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.white().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.white().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.white().blue()).toEqual(255);
    });
  });

  describe("Color.whiteSmoke() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.whiteSmoke().red()).toEqual(245);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.whiteSmoke().green()).toEqual(245);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.whiteSmoke().blue()).toEqual(245);
    });
  });

  describe("Color.yellow() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.yellow().red()).toEqual(255);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.yellow().green()).toEqual(255);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.yellow().blue()).toEqual(0);
    });
  });

  describe("Color.yellowGreen() function", function() {
    it("should return a color with the correct red value", function() {
      expect(Color.yellowGreen().red()).toEqual(154);
    });
  
    it("should return a color with the correct green value", function() {
      expect(Color.yellowGreen().green()).toEqual(205);
    });
  
    it("should return a color with the correct blue value", function() {
      expect(Color.yellowGreen().blue()).toEqual(50);
    });
  });

